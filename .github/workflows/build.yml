name: Build

on: [push]

jobs:
  build:

    strategy:
      matrix:
        include:
          - build-name: 'Windows 8.1+ 64-bit'
            python-version: "3.11"
            pyqt-version: 6
            platform: windows-latest
            arch: 'x64'
          - build-name: 'Windows 7 or 32-bit'
            python-version: 3.8
            pyqt-version: 5
            platform: windows-latest
            arch: 'x86'
          - build-name: 'macOS'
            python-version: "3.11"
            pyqt-version: 6
            platform: macos-latest
            arch: 'x64'
          - build-name: 'Ubuntu'
            python-version: "3.11"
            pyqt-version: 6
            platform: ubuntu-latest
            arch: 'x64'

    name: ${{ matrix.build-name }}

    runs-on: ${{ matrix.platform }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.arch }}
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel
        python -m pip install PyQt${{ matrix.pyqt-version }} nsmblib PyInstaller
    - name: Install dependencies (Linux)
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get install -y libxkbcommon-x11-0 libxcomposite1  # https://github.com/pyinstaller/pyinstaller/issues/4970#issuecomment-670845012
    - name: Configure PyQt5 build
      if: ${{ matrix.pyqt-version == 5 }}
      shell: bash
      run: echo "PYQT_VERSION=PyQt5" >> $GITHUB_ENV
    - name: Build
      shell: bash
      run: python -OO build_release.py
    - name: Tar (macOS/Linux)
      if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
      run: |
        cd distrib
        tar -czvf ../build-${{ matrix.platform }}.tar.gz ./*
        cd ..
    - name: Upload artifacts (Windows)
      if: ${{ runner.os == 'Windows' }}
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.python-version }}
        path: distrib/*
    - name: Upload artifacts (macOS/Linux)
      if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.platform }}-${{ matrix.arch }}
        path: build-${{ matrix.platform }}.tar.gz
